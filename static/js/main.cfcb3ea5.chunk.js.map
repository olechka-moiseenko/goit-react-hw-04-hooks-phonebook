{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/ContactListItem/ContactListItem.module.css","components/SearchContact/SearchContact.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/SearchContact/SearchContact.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","handleSubmit","useState","name","setName","number","setNumber","handleSetInfo","e","target","value","reset","onSubmit","preventDefault","className","s","form","label","input","autoComplete","onChange","type","pattern","title","required","btn","ContactListItem","deleteContact","li","button","onClick","ContactList","contacts","handleDelete","map","id","SearchContact","inputChange","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","normaliseFilter","toLowerCase","filteredContacts","contact","includes","container","uuidv4","find","savedContact","alert","prevContacts","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfcb3ea5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZJ2_x\",\"label\":\"ContactForm_label__2U0TW\",\"input\":\"ContactForm_input__1Vf-r\",\"btn\":\"ContactForm_btn__24VrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1gVm5\",\"title\":\"App_title__1fEeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactListItem_li__nC4vq\",\"button\":\"ContactListItem_button__PRQng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SearchContact_title__2jtXs\"};","import { useState } from \"react\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ handleSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleSetInfo = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleAddContact = (e) => {\n    e.preventDefault();\n    handleSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleAddContact} className={s.form}>\n      <label className={s.label}>\n        <p>Name</p>\n        <input\n          className={s.input}\n          autoComplete=\"off\"\n          onChange={handleSetInfo}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        <p>Number</p>\n        <input\n          className={s.input}\n          autoComplete=\"off\"\n          onChange={handleSetInfo}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import s from \"./ContactListItem.module.css\";\n\nexport default function ContactListItem({ name, number, deleteContact }) {\n  return (\n    <li className={s.li}>\n      {name}: {number}\n      <button type=\"button\" className={s.button} onClick={deleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n}\n","import ContactListItem from \"../ContactListItem/ContactListItem.js\";\n\nexport default function ContactList({ contacts, handleDelete }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => handleDelete(id)}\n        />\n      ))}\n    </ul>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport s from \"./SearchContact.module.css\";\n\nexport default function SearchContact({ value, inputChange }) {\n  return (\n    <label>\n      <title className={s.title}>Find contacts by name</title>\n      <input type=\"text\" value={value} onChange={inputChange} />\n    </label>\n  );\n}\nSearchContact.propTypes = {\n  value: PropTypes.string,\n  inputChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm.js\";\nimport ContactList from \"./components/ContactList/ContactList.js\";\nimport SearchContact from \"./components/SearchContact/SearchContact.js\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(localStorage.getItem(\"contactList\")) ?? []\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"contactList\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = ({ name, number }) => {\n    const contact = { name, number, id: uuidv4() };\n    contacts.find((savedContact) => savedContact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : setContacts((prevContacts) => [...prevContacts, contact]);\n  };\n\n  const handleDelete = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const normaliseFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normaliseFilter)\n  );\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm handleSubmit={formSubmitHandler} />\n\n      <h2>Contacts</h2>\n      <SearchContact value={filter} inputChange={changeFilter} />\n      <ContactList contacts={filteredContacts} handleDelete={handleDelete} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}